{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/request.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","film","setFilm","setTitle","hasError","setError","onSubmit","event","target","value","fetch","then","response","json","catch","error","request","Response","Title","Plot","Poster","imdbID","preventDefault","htmlFor","type","id","placeholder","name","onClick","App","state","data","addedMovie","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0111823.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/request';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [film, setFilm] = useState({});\n  const [title, setTitle] = useState('');\n  const [hasError, setError] = useState(false);\n\n  const submitHandler = (event) => {\n    setTitle(event.target.title.value);\n\n    request(title)\n      .then((response) => {\n        if (response.Response === 'False' && title !== '') {\n          setError(true);\n        } else {\n          setFilm({\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: response.Poster,\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}/`,\n            imdbId: response.imdbID,\n          });\n          setError(false);\n        }\n      });\n\n    event.preventDefault();\n  };\n\n  const addMovieFormHandler = (event) => {\n    if (!hasError && title !== '') {\n      addMovie(film);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={submitHandler}>\n        <div className=\"field\">\n\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${hasError && 'is-danger'}`}\n              name=\"title\"\n            />\n          </div>\n\n          {hasError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieFormHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!(hasError || title === '') && (\n          <MovieCard {...film} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","\nconst apikey = '4d5d73d6';\n\nconst url = 'https://www.omdbapi.com/';\n\nexport const request = title => (\n  fetch(`${url}?t=${title}&apikey=${apikey}`)\n    .then(response => response.json())\n    .catch(error => error)\n);\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (addedMovie) => {\n    if (!this.state.movies.find(movie => movie.imdbId === addedMovie.imdbId)) {\n      this.setState(\n        state => ({ movies: [...state.movies, addedMovie] }),\n      );\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}